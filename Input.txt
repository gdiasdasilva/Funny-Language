decl i=1
  c = new (i+1)
in
  c := 2*(!c + i);
  println (!c)
end;;

decl
i = new 0 c=i
in
c := 2;
  print (c);
  print (!i + 1);
  println "hello"
end;;

decl
  i = new 0
  c = (i := !i + 1; !i)
in
  i := !i + c;
  println i
end;;

decl
  i = new 0
  c = !i+1
in
  while (!i < 100) do
println !i;
i := !i+c end
end;;

decl
  i = new 0
  c = !i+1
in
  while (!i < 100) do
    decl x = !i in
      println x;
      i := x + c
end end;
  print !i
end;;

decl
  addBoth = new (fun x:int, y:int => x+y end)
in
  println((!addBoth)(((!addBoth)(10,10)),5))
end;;

decl
  addBoth = new (fun x:int, y:int => x+y end)
  var = new(0)
  x = 6
  y = 100
in
  decl
    apply = fun f:(int, int => int), x:int, y:int => f(x, y) end
    x = 200
    y = 500
  in
    var := apply((!addBoth), 150, 170);
    println(!var)
  end
end
;;

decl
  hook = new (fun x:int => x end)
in
  decl 
    f = fun x:int => (x==0) ? 1 : (x*(!hook)(x-1)) end
  in
    hook := f;
    println f(5)
  end
end;;

decl
  addBoth = new (fun x:int, y:int => x+y end)
  inc = new (fun x:int => x+1 end)
in
  println( (!addBoth) ( (!inc)(10),5 ) )
end;;
/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Num = 5;
  /** RegularExpression Id. */
  int BOOL_LIT = 6;
  /** RegularExpression Id. */
  int REF_TYPE = 7;
  /** RegularExpression Id. */
  int INT_TYPE = 8;
  /** RegularExpression Id. */
  int BOOL_TYPE = 9;
  /** RegularExpression Id. */
  int CMD_TYPE = 10;
  /** RegularExpression Id. */
  int LPAR = 11;
  /** RegularExpression Id. */
  int RPAR = 12;
  /** RegularExpression Id. */
  int LBRACE = 13;
  /** RegularExpression Id. */
  int RBRACE = 14;
  /** RegularExpression Id. */
  int ADD_OP = 15;
  /** RegularExpression Id. */
  int MINUS = 16;
  /** RegularExpression Id. */
  int MUL_OP = 17;
  /** RegularExpression Id. */
  int DIV_OP = 18;
  /** RegularExpression Id. */
  int EQ = 19;
  /** RegularExpression Id. */
  int IF_TOK = 20;
  /** RegularExpression Id. */
  int THEN_TOK = 21;
  /** RegularExpression Id. */
  int ELSE_TOK = 22;
  /** RegularExpression Id. */
  int GR = 23;
  /** RegularExpression Id. */
  int GREQ = 24;
  /** RegularExpression Id. */
  int LS = 25;
  /** RegularExpression Id. */
  int LSEQ = 26;
  /** RegularExpression Id. */
  int NEQ = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int NOT = 30;
  /** RegularExpression Id. */
  int QUEST = 31;
  /** RegularExpression Id. */
  int COLON = 32;
  /** RegularExpression Id. */
  int SEMICOLON = 33;
  /** RegularExpression Id. */
  int EL = 34;
  /** RegularExpression Id. */
  int DECL = 35;
  /** RegularExpression Id. */
  int ASSOC = 36;
  /** RegularExpression Id. */
  int IN = 37;
  /** RegularExpression Id. */
  int END = 38;
  /** RegularExpression Id. */
  int NEW = 39;
  /** RegularExpression Id. */
  int ASSIGN = 40;
  /** RegularExpression Id. */
  int WHILE = 41;
  /** RegularExpression Id. */
  int DO = 42;
  /** RegularExpression Id. */
  int PRINT = 43;
  /** RegularExpression Id. */
  int PRINTLN = 44;
  /** RegularExpression Id. */
  int DEREF = 45;
  /** RegularExpression Id. */
  int DOT = 46;
  /** RegularExpression Id. */
  int STRING_DEL = 47;
  /** RegularExpression Id. */
  int FUN = 48;
  /** RegularExpression Id. */
  int ARROW = 49;
  /** RegularExpression Id. */
  int COMMA = 50;
  /** RegularExpression Id. */
  int STRING = 51;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<Num>",
    "<BOOL_LIT>",
    "\"ref\"",
    "\"int\"",
    "\"bool\"",
    "\"cmd\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"==\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\";\"",
    "\";;\"",
    "\"decl\"",
    "\"=\"",
    "\"in\"",
    "\"end\"",
    "\"new\"",
    "\":=\"",
    "\"while\"",
    "\"do\"",
    "\"print\"",
    "\"println\"",
    "\"!\"",
    "\".\"",
    "\"\\\"\"",
    "\"fun\"",
    "\"=>\"",
    "\",\"",
    "<STRING>",
  };

}
